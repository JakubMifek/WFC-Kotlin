import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTargetWithTests

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.31'
}

group = 'org.mifek.wfc'
version = '1.1.0'

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'maven-publish'

kotlin {
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }
    js(LEGACY) {
        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
    }
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    KotlinNativeTargetWithTests nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    sourceSets {
        commonMain {
        }
        commonTest {
            dependencies {
                implementation kotlin('test-junit')
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependsOn commonTest
            dependencies {
                implementation kotlin('test-junit')
            }
        }
        jsMain {
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        nativeMain {
        }
        nativeTest {
        }
    }
}
